<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 三国 | 吴文洁]]></title>
  <link href="http://www.wuwenjie.tk/blog/categories/san-guo/atom.xml" rel="self"/>
  <link href="http://www.wuwenjie.tk/"/>
  <updated>2016-07-10T20:54:58+08:00</updated>
  <id>http://www.wuwenjie.tk/</id>
  <author>
    <name><![CDATA[wuwenjie]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[BIG_DATA杂谈(2)-hadoop探究《三国演义》的词频-改]]></title>
    <link href="http://www.wuwenjie.tk/blog/2015/11/27/big-dataza-tan-2-hadooptan-jiu-san-guo-yan-yi-de-ci-pin-gai/"/>
    <updated>2015-11-27T20:36:00+08:00</updated>
    <id>http://www.wuwenjie.tk/blog/2015/11/27/big-dataza-tan-2-hadooptan-jiu-san-guo-yan-yi-de-ci-pin-gai</id>
    <content type="html"><![CDATA[<h2>与传统文化的碰撞</h2>

<ul>
<li>虽然这个时代日新月异，但古老的故事依然让人们留恋。</li>
<li>此次用hadoop从另一个方面，探究一下脍炙人口的《三国演义》。</li>
</ul>


<h2>原理</h2>

<ul>
<li>利用lucene的<a href="http://lucene.apache.org/core/5_4_0/analyzers-smartcn/index.html">smartcn</a>进行分词，结合<a href="https://www.ibm.com/developerworks/cn/opensource/os-cn-hadoop2/">hadoop的编写wordcount</a>，进行词频统计。</li>
</ul>


<h2>难点</h2>

<ul>
<li>编译与运行包含第三方jar包的hadoop程序。</li>
</ul>


<!-- more -->


<h2>准备工作</h2>

<ul>
<li><p>启动hdfs与yarn
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> ~/hello/bigdata/hadoop-2.7.1 <span class="c">#hadoop所在文件夹</span>
</span><span class='line'>sbin/start-dfs.sh
</span><span class='line'>sbin/start-yarn.sh
</span><span class='line'>jps
</span></code></pre></td></tr></table></div></figure></notextile></div></p></li>
<li><p>hadoop执行准备工作
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">JAVA_HOME</span><span class="o">=</span>&amp;ldquo;/usr/lib/jvm/java-7-openjdk-i386&amp;rdquo;
</span><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="k">${</span><span class="nv">JAVA_HOME</span><span class="k">}</span>/bin:<span class="k">${</span><span class="nv">PATH</span><span class="k">}</span>
</span><span class='line'><span class="nb">export </span><span class="nv">HADOOP_CLASSPATH</span><span class="o">=</span><span class="k">${</span><span class="nv">JAVA_HOME</span><span class="k">}</span>/lib/tools.jar
</span></code></pre></td></tr></table></div></figure></notextile></div></p></li>
<li><p>编写WordCountOrder 进行词频统计</p></li>
<li>cd ~/hello/bigdata/hadoop_ex/wordcount
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>WordCountOrder.java </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">&lt;/</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.Random</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.StringTokenizer</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">org.apache.hadoop.conf.Configuration</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">org.apache.hadoop.fs.FileSystem</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.hadoop.fs.Path</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">org.apache.hadoop.io.IntWritable</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.hadoop.io.Text</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.hadoop.io.WritableComparable</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">org.apache.hadoop.mapreduce.Job</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.hadoop.mapreduce.Mapper</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.hadoop.mapreduce.Reducer</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.hadoop.mapreduce.lib.input.FileInputFormat</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.hadoop.mapreduce.lib.input.SequenceFileInputFormat</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.hadoop.mapreduce.lib.map.InverseMapper</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.hadoop.mapreduce.lib.output.FileOutputFormat</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">org.apache.hadoop.util.GenericOptionsParser</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">java.util.Iterator</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">org.apache.lucene.analysis.TokenStream</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.lucene.analysis.cn.smart.SmartChineseAnalyzer</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.lucene.analysis.tokenattributes.CharTermAttribute</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.lucene.analysis.util.CharArraySet</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.lucene.util.Version</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">WordCountOrder</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">TokenizerMapper</span> <span class="kd">extends</span> <span class="n">Mapper</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">Object</span><span class="o">,</span> <span class="n">Text</span><span class="o">,</span> <span class="n">Text</span><span class="o">,</span> <span class="n">IntWritable</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">final</span> <span class="kd">static</span> <span class="n">IntWritable</span> <span class="n">one</span> <span class="o">=</span> <span class="k">new</span> <span class="n">IntWritable</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">Text</span> <span class="n">word</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Text</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">map</span><span class="o">(</span><span class="n">Object</span> <span class="n">key</span><span class="o">,</span> <span class="n">Text</span> <span class="n">value</span><span class="o">,</span> <span class="n">Context</span> <span class="n">context</span><span class="o">)</span>
</span><span class='line'>            <span class="kd">throws</span> <span class="n">IOException</span><span class="o">,</span> <span class="n">InterruptedException</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="cm">/*</span>
</span><span class='line'><span class="cm">        String[] self_stop_words = { &quot;的&quot;, &quot;在&quot;,&quot;了&quot;, &quot;呢&quot;, &quot;是&quot;};</span>
</span><span class='line'><span class="cm">        CharArraySet cas = new CharArraySet(0, true);</span>
</span><span class='line'><span class="cm">        for(int i = 0; i &amp;lt; self_stop_words.length; i++) {</span>
</span><span class='line'><span class="cm">              cas.add(self_stop_words[i]);</span>
</span><span class='line'><span class="cm">        }</span>
</span><span class='line'><span class="cm">        // 加入系统默认停用词</span>
</span><span class='line'><span class="cm">        Iterator&amp;lt;Object&amp;gt; itor = SmartChineseAnalyzer.getDefaultStopSet().iterator();</span>
</span><span class='line'><span class="cm">        while (itor.hasNext()) {</span>
</span><span class='line'><span class="cm">            cas.add(itor.next());</span>
</span><span class='line'><span class="cm">        }</span>
</span><span class='line'><span class="cm">        */</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 中英文混合分词器</span>
</span><span class='line'>        <span class="n">SmartChineseAnalyzer</span> <span class="n">sca</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SmartChineseAnalyzer</span><span class="o">();</span>
</span><span class='line'>        <span class="c1">//SmartChineseAnalyzer sca = new SmartChineseAnalyzer(cas);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">TokenStream</span> <span class="n">ts</span> <span class="o">=</span> <span class="n">sca</span><span class="o">.</span><span class="na">tokenStream</span><span class="o">(</span><span class="s">&quot;field&quot;</span><span class="o">,</span> <span class="n">value</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
</span><span class='line'>        <span class="n">CharTermAttribute</span> <span class="n">ch</span> <span class="o">=</span> <span class="n">ts</span><span class="o">.</span><span class="na">addAttribute</span><span class="o">(</span><span class="n">CharTermAttribute</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">ts</span><span class="o">.</span><span class="na">reset</span><span class="o">();</span>
</span><span class='line'>        <span class="k">while</span> <span class="o">(</span><span class="n">ts</span><span class="o">.</span><span class="na">incrementToken</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">word</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="n">ch</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
</span><span class='line'>            <span class="n">context</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">word</span><span class="o">,</span> <span class="n">one</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">ts</span><span class="o">.</span><span class="na">end</span><span class="o">();</span>
</span><span class='line'>        <span class="n">ts</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">IntSumReducer</span> <span class="kd">extends</span>
</span><span class='line'>        <span class="n">Reducer</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">Text</span><span class="o">,</span> <span class="n">IntWritable</span><span class="o">,</span> <span class="n">Text</span><span class="o">,</span> <span class="n">IntWritable</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">IntWritable</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="n">IntWritable</span><span class="o">();</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">reduce</span><span class="o">(</span><span class="n">Text</span> <span class="n">key</span><span class="o">,</span> <span class="n">Iterable</span><span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span><span class="n">IntWritable</span><span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="n">values</span><span class="o">,</span>
</span><span class='line'>            <span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span><span class="o">,</span> <span class="n">InterruptedException</span> <span class="o">{</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>        <span class="k">for</span> <span class="o">(</span><span class="n">IntWritable</span> <span class="n">val</span> <span class="o">:</span> <span class="n">values</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">sum</span> <span class="o">+=</span> <span class="n">val</span><span class="o">.</span><span class="na">get</span><span class="o">();</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">result</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="n">sum</span><span class="o">);</span>
</span><span class='line'>        <span class="n">context</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">key</span><span class="o">,</span> <span class="n">result</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">IntWritableDecreasingComparator</span> <span class="kd">extends</span> <span class="n">IntWritable</span><span class="o">.</span><span class="na">Comparator</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">int</span> <span class="nf">compare</span><span class="o">(</span><span class="n">WritableComparable</span> <span class="n">a</span><span class="o">,</span> <span class="n">WritableComparable</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="o">-</span><span class="kd">super</span><span class="o">.</span><span class="na">compare</span><span class="o">(</span><span class="n">a</span><span class="o">,</span> <span class="n">b</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="kd">public</span> <span class="kt">int</span> <span class="nf">compare</span><span class="o">(</span><span class="kt">byte</span><span class="o">[]</span> <span class="n">b1</span><span class="o">,</span> <span class="kt">int</span> <span class="n">s1</span><span class="o">,</span> <span class="kt">int</span> <span class="n">l1</span><span class="o">,</span> <span class="kt">byte</span><span class="o">[]</span> <span class="n">b2</span><span class="o">,</span> <span class="kt">int</span> <span class="n">s2</span><span class="o">,</span> <span class="kt">int</span> <span class="n">l2</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="o">-</span><span class="kd">super</span><span class="o">.</span><span class="na">compare</span><span class="o">(</span><span class="n">b1</span><span class="o">,</span> <span class="n">s1</span><span class="o">,</span> <span class="n">l1</span><span class="o">,</span> <span class="n">b2</span><span class="o">,</span> <span class="n">s2</span><span class="o">,</span> <span class="n">l2</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">Configuration</span> <span class="n">conf</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Configuration</span><span class="o">();</span>
</span><span class='line'>    <span class="n">String</span><span class="o">[]</span> <span class="n">otherArgs</span> <span class="o">=</span> <span class="k">new</span> <span class="n">GenericOptionsParser</span><span class="o">(</span><span class="n">conf</span><span class="o">,</span> <span class="n">args</span><span class="o">)</span>
</span><span class='line'>            <span class="o">.</span><span class="na">getRemainingArgs</span><span class="o">();</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">otherArgs</span><span class="o">.</span><span class="na">length</span> <span class="o">!=</span> <span class="mi">2</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">err</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Usage: wordcount &amp;lt;in&amp;gt; &amp;lt;out&amp;gt;&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">Path</span> <span class="n">tempDir</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Path</span><span class="o">(</span><span class="s">&quot;wordcount-temp-&quot;</span> <span class="o">+</span> <span class="n">Integer</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span>
</span><span class='line'>        <span class="k">new</span> <span class="nf">Random</span><span class="o">().</span><span class="na">nextInt</span><span class="o">(</span><span class="n">Integer</span><span class="o">.</span><span class="na">MAX_VALUE</span><span class="o">)));</span> <span class="c1">//定义一个临时目录</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">Job</span> <span class="n">job</span> <span class="o">=</span> <span class="n">Job</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="n">conf</span><span class="o">,</span> <span class="s">&quot;word count&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">job</span><span class="o">.</span><span class="na">setJarByClass</span><span class="o">(</span><span class="n">WordCountOrder</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="k">try</span><span class="o">{</span>
</span><span class='line'>        <span class="n">job</span><span class="o">.</span><span class="na">setMapperClass</span><span class="o">(</span><span class="n">TokenizerMapper</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>        <span class="n">job</span><span class="o">.</span><span class="na">setCombinerClass</span><span class="o">(</span><span class="n">IntSumReducer</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>        <span class="n">job</span><span class="o">.</span><span class="na">setReducerClass</span><span class="o">(</span><span class="n">IntSumReducer</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">job</span><span class="o">.</span><span class="na">setOutputKeyClass</span><span class="o">(</span><span class="n">Text</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>        <span class="n">job</span><span class="o">.</span><span class="na">setOutputValueClass</span><span class="o">(</span><span class="n">IntWritable</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">FileInputFormat</span><span class="o">.</span><span class="na">addInputPath</span><span class="o">(</span><span class="n">job</span><span class="o">,</span> <span class="k">new</span> <span class="n">Path</span><span class="o">(</span><span class="n">otherArgs</span><span class="o">[</span><span class="mi">0</span><span class="o">]));</span>
</span><span class='line'>        <span class="n">FileOutputFormat</span><span class="o">.</span><span class="na">setOutputPath</span><span class="o">(</span><span class="n">job</span><span class="o">,</span> <span class="n">tempDir</span><span class="o">);</span>
</span><span class='line'>        <span class="c1">//先将词频统计任务的输出结果写到临时目录中, 下一个排序任务以临时目录为输入目录。</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">job</span><span class="o">.</span><span class="na">setOutputFormatClass</span><span class="o">(</span><span class="n">SequenceFileOutputFormat</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span><span class="o">(</span><span class="n">job</span><span class="o">.</span><span class="na">waitForCompletion</span><span class="o">(</span><span class="kc">true</span><span class="o">)){</span> <span class="c1">//当word count结束</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">Job</span> <span class="n">sortJob</span> <span class="o">=</span> <span class="n">Job</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="n">conf</span><span class="o">,</span> <span class="s">&quot;sort&quot;</span><span class="o">);</span>
</span><span class='line'>            <span class="n">sortJob</span><span class="o">.</span><span class="na">setJarByClass</span><span class="o">(</span><span class="n">WordCountOrder</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">FileInputFormat</span><span class="o">.</span><span class="na">addInputPath</span><span class="o">(</span><span class="n">sortJob</span><span class="o">,</span> <span class="n">tempDir</span><span class="o">);</span>
</span><span class='line'>            <span class="n">sortJob</span><span class="o">.</span><span class="na">setInputFormatClass</span><span class="o">(</span><span class="n">SequenceFileInputFormat</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">sortJob</span><span class="o">.</span><span class="na">setMapperClass</span><span class="o">(</span><span class="n">InverseMapper</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>            <span class="c1">//InverseMapper作用是实现map()之后的数据对的key和value交换</span>
</span><span class='line'>            <span class="n">sortJob</span><span class="o">.</span><span class="na">setNumReduceTasks</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>            <span class="c1">// Reducer 的个数限定为1, 最终输出的结果文件就是一个</span>
</span><span class='line'>            <span class="n">FileOutputFormat</span><span class="o">.</span><span class="na">setOutputPath</span><span class="o">(</span><span class="n">sortJob</span><span class="o">,</span> <span class="k">new</span> <span class="n">Path</span><span class="o">(</span><span class="n">otherArgs</span><span class="o">[</span><span class="mi">1</span><span class="o">]));</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">sortJob</span><span class="o">.</span><span class="na">setOutputKeyClass</span><span class="o">(</span><span class="n">IntWritable</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>            <span class="n">sortJob</span><span class="o">.</span><span class="na">setOutputValueClass</span><span class="o">(</span><span class="n">Text</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>            <span class="cm">/* Hadoop 默认对 IntWritable 按升序排序，而我们需要的是按降序排列。</span>
</span><span class='line'><span class="cm">             * 因此实现了 IntWritableDecreasingComparator 类,　</span>
</span><span class='line'><span class="cm">             * 并指定使用这个自定义的 Comparator 类对输出结果中的 key (词频)进行排序*/</span>
</span><span class='line'>            <span class="n">sortJob</span><span class="o">.</span><span class="na">setSortComparatorClass</span><span class="o">(</span><span class="n">IntWritableDecreasingComparator</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(</span><span class="n">sortJob</span><span class="o">.</span><span class="na">waitForCompletion</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">?</span> <span class="mi">0</span> <span class="o">:</span> <span class="mi">1</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span><span class="k">finally</span><span class="o">{</span>
</span><span class='line'>        <span class="n">FileSystem</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">conf</span><span class="o">).</span><span class="na">deleteOnExit</span><span class="o">(</span><span class="n">tempDir</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li><p>编译java代码并打包
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">hadoop</span><span class="o">=</span>&amp;ldquo;../../hadoop-2.7.1/bin/hadoop&amp;rdquo;
</span><span class='line'>javac -cp &lt;code&gt;<span class="nv">$hadoop</span> classpath&lt;/code&gt;&amp;lsquo;:lucene-core-4.10.1.jar:lucene-analyzers-common-4.10.1.jar:lucene-analyzers-smartcn-4.10.1.jar&amp;rsquo; WordCountOrder.java
</span><span class='line'>jar cf wcr.jar WordCountOrder*.class
</span></code></pre></td></tr></table></div></figure></notextile></div></p></li>
<li><p><img src="/images/hadoop-001.png" alt="hadoop-001" /></p></li>
<li><p>察看hdfs内容</p></li>
<li>../../hadoop-2.7.1/bin/hdfs dfs -ls -R /</li>
<li><p><img src="/images/hadoop-002.png" alt="hadoop-002" /></p></li>
<li><p>运行hadoop程序
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">LIBJARS</span><span class="o">=</span>lucene-core-4.10.1.jar,lucene-analyzers-common-4.10.1.jar,lucene-analyzers-smartcn-4.10.1.jar
</span><span class='line'>../../hadoop-2.7.1/bin/hadoop jar wcr.jar WordCountOrder -libjars <span class="k">${</span><span class="nv">LIBJARS</span><span class="k">}</span> /hadoop/test3 /hadoop/out
</span></code></pre></td></tr></table></div></figure></notextile></div></p></li>
<li><p>运行察看界面</p></li>
<li><p><img src="/images/hadoop-003.png" alt="hadoop-003" /></p></li>
<li><p>察看词频统计结果</p></li>
<li>../../hadoop-2.7.1/bin/hdfs dfs -cat /hadoop/out/part-r-00000 > out.txt</li>
<li><p>cat out.txt | grep &lsquo;[[:digit:]]{1,}[[:blank:]].{1}$&rsquo;|head
*
<code>text
8503    曰
7077    之
3880    不
3730    兵
3495    人
3087    一
2590    有
2516    军
2389    大
2343    于
</code></p></li>
<li><p>cat out.txt | grep &lsquo;[[:digit:]]{1,}[[:blank:]].{2}$&rsquo;|head</p></li>
<li><p><code>text
880 曹操
837 将军
541 司马
512 丞相
494 关公
420 不可
406 荆州
372 夏侯
367 如此
321 主公
</code></p></li>
<li><p>cat out.txt | grep &lsquo;[[:digit:]]{1,}[[:blank:]].{3}$&rsquo;|head</p></li>
<li><p><code>text
146   诸葛亮
48  大将军
34  刀斧手
30  中郎将
29  阳平关
28  不得已
24  大丈夫
23  不可不
18  弓弩手
15  东南风
</code></p></li>
<li><p>cat out.txt | grep &lsquo;[[:digit:]]{1,}[[:blank:]].{4,}$&rsquo;|head</p></li>
<li><p><code>text
24    决一死战
22  措手不及
18  不计其数
16  深沟高垒
15  按兵不动
14  所到之处
13  勃然大怒
13  出其不意
12  人困马乏
11  将计就计
</code></p></li>
</ul>


<h2>结束语</h2>

<ul>
<li>从短短几字就不难看出，《三国演义》的主要人物、地点、策略。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BIG_DATA杂谈(1)-简单的hadoop伪分布式配置与测试]]></title>
    <link href="http://www.wuwenjie.tk/blog/2015/10/31/big-dataza-tan-1-jian-dan-de-hadoopwei-fen-bu-shi-pei-zhi-yu-ce-shi/"/>
    <updated>2015-10-31T20:23:00+08:00</updated>
    <id>http://www.wuwenjie.tk/blog/2015/10/31/big-dataza-tan-1-jian-dan-de-hadoopwei-fen-bu-shi-pei-zhi-yu-ce-shi</id>
    <content type="html"><![CDATA[<h2>前言</h2>

<ul>
<li><a href="https://zh.wikipedia.org/wiki/%E5%A4%A7%E6%95%B8%E6%93%9A">Big Data</a> and <a href="https://zh.wikipedia.org/wiki/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD">AI</a>&rsquo;s age has coming!</li>
<li>面对海量的数据，传统方式已无法满足用户高效地使用和处理数据了。</li>
<li><a href="http://hadoop.apache.org">hadoop</a>的意义非同一般，它赋予了人们面对bigdata的信心和能力，同时也开创了一个时代，</li>
<li>它是一个可靠的、可扩展的、分布式的计算框架,给予人们PB级的计算处理能力。</li>
<li>由<a href="https://en.wikipedia.org/wiki/Doug_Cutting">Doug Cutting</a>根据谷歌公司发表的MapReduce和GFS的论文自行实现而成。</li>
<li>诞生历史：Lucene (1999) &ndash;> Nutch (2003) &ndash;> hadoop (2011)</li>
</ul>


<!-- more -->


<h2>配置</h2>

<ul>
<li>对hadoop的配置资料有很多，不再赘述。可参考<a href="https://hadoop.apache.org/docs/r1.0.4/cn/quickstart.html#PseudoDistributed">它</a></li>
<li>主要关注的是配置中存在的问题

<ul>
<li>解决 错误: 找不到或无法加载主类 org.apache.hadoop.hdfs.server.namenode.NameNode</li>
<li> export HADOOP_HOME=/home/wuwenjie/hello/bigdata/hadoop-2.7.1</li>
<li> export PATH=&ldquo;${HADOOP_HOME}:$PATH&rdquo;</li>
<li>etc/hadoop/hadoop-env.sh 中配置JDK</li>
<li> export JAVA_HOME=&ldquo;/usr/lib/jvm/java-7-openjdk-i386&rdquo;</li>
<li>etc/hadoop 下的一些配置：
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>etc/hadoop/core-site.xml </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;configuration&gt;</span>
</span><span class='line'><span class="nt">&lt;property&gt;</span>
</span><span class='line'>  <span class="nt">&lt;name&gt;</span>fs.defaultFS<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>  <span class="nt">&lt;value&gt;</span>hdfs://localhost:9000<span class="nt">&lt;/value&gt;</span>
</span><span class='line'><span class="nt">&lt;/property&gt;</span>
</span><span class='line'><span class="nt">&lt;property&gt;&lt;br/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;name&gt;</span>hadoop.tmp.dir<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>  <span class="nt">&lt;value&gt;</span>/home/wuwenjie/hello/bigdata/hadoopTmpDir<span class="nt">&lt;/value&gt;&lt;br/&gt;</span>
</span><span class='line'><span class="nt">&lt;/property&gt;&lt;br/&gt;</span>
</span><span class='line'><span class="nt">&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></li>
</ul>
</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>etc/hadoop/hdfs-site.xml </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;configuration&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>property<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>name<span class="ni">&amp;gt;</span>dfs.replication<span class="ni">&amp;lt;</span>/name<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>value<span class="ni">&amp;gt;</span>1<span class="ni">&amp;lt;</span>/value<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/property<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>property<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>name<span class="ni">&amp;gt;</span>dfs.name.dir<span class="ni">&amp;lt;</span>/name<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>value<span class="ni">&amp;gt;</span>file:///home/wuwenjie/hello/bigdata/hdfs/name<span class="ni">&amp;lt;</span>/value<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/property<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>property<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>name<span class="ni">&amp;gt;</span>dfs.data.dir<span class="ni">&amp;lt;</span>/name<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>value<span class="ni">&amp;gt;</span>file:///home/wuwenjie/hello/bigdata/hdfs/data<span class="ni">&amp;lt;</span>/value<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/property<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>etc/hadoop/mapred-site.xml</span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;configuration&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>property<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>name<span class="ni">&amp;gt;</span>mapred.job.tracker<span class="ni">&amp;lt;</span>/name<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>value<span class="ni">&amp;gt;</span>localhost:9001<span class="ni">&amp;lt;</span>/value<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/property<span class="ni">&amp;gt;</span>
</span><span class='line'>
</span><span class='line'><span class="ni">&amp;lt;</span>property<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>name<span class="ni">&amp;gt;</span>mapreduce.framework.name<span class="ni">&amp;lt;</span>/name<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>value<span class="ni">&amp;gt;</span>yarn<span class="ni">&amp;lt;</span>/value<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/property<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>etc/hadoop/yarn-site.xml </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;configuration&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>!-- Site specific YARN configuration properties --<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>property<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>name<span class="ni">&amp;gt;</span>yarn.nodemanager.aux-services<span class="ni">&amp;lt;</span>/name<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>value<span class="ni">&amp;gt;</span>mapreduce_shuffle<span class="ni">&amp;lt;</span>/value<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/property<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;/configuration&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>初始化及启动</h2>

<ul>
<li>启动hdsf：sbin/start-dfs.sh</li>
<li>格式化文件系统（只需一次）：bin/hdfs namenode -format</li>
<li>启动yarn：sbin/start-yarn.sh</li>
<li>察看java进程：jps</li>
<li><p>jps命令结果
<code>text
5600 ResourceManager
5987 Jps
5024 DataNode
5399 SecondaryNameNode
5890 NodeManager
4738 NameNode
</code></p></li>
<li><p>解释</p>

<ul>
<li>ResourceManager：处理客户端请求启动/监控、ApplicationMaster监控、NodeManager资源分配与调度。</li>
<li>DataNode：HDFS工作节点，根据namenode的调度存储和检索数据，定期发送存储的block列表。</li>
<li>SecondaryNameNode：帮助NameNode管理Metadata数据，减小在NameNode上的压力。</li>
<li>NodeManager：单个节点上的资源管理、处理来自ResourceManager、ApplicationMaster的命令。</li>
<li>NameNode：管理HDFS的Namespace，维护所有文件和文件夹的元数据(metadata）。</li>
</ul>
</li>
</ul>


<h2>测试</h2>

<ul>
<li>在hdfs中创建文件夹和导入数据
<code>sh
bin/hdfs dfs -mkdir /hadoop
bin/hdfs dfs -mkdir /hadoop/test
bin/hdfs dfs -mkdir /hadoop/out
bin/hdfs dfs -put "/media/三国志.txt" /hadoop/test
</code></li>
<li>运行内置示例：grep
<code>sh
bin/hadoop jar \
    share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.1.jar \
    grep /hadoop/test /hadoop/out '漢.'
</code></li>
<li>察看结果
<code>sh
bin/hdfs dfs -cat /hadoop/out/part-r-00000
</code></li>
<li>部分结果
<code>sh
41    漢書
38  漢中
36  漢晉
34  漢，
30  漢之
29  漢室
23  漢紀
23  漢氏
16  漢末
16  漢高
14  漢朝
13  漢祖
12  漢文
12  漢祚
9   漢帝
8   漢家
7   漢水
</code></li>
</ul>

]]></content>
  </entry>
  
</feed>
